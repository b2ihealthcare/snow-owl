<project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.b2international.snowowl</groupId>
		<artifactId>core-parent</artifactId>
		<version>8.1.2-SNAPSHOT</version>
	</parent>

	<artifactId>com.b2international.snowowl.core.rest</artifactId>
	<packaging>eclipse-plugin</packaging>
	
	<properties>
		<spring.version>5.3.18</spring.version>
		<spring.security.version>5.5.1</spring.security.version>
		<springdoc.version>1.5.9</springdoc.version>
		<!-- Node.js version to use for building the API docs site -->
		<node.version>v14.17.1</node.version>
		<npm.version>7.20.2</npm.version>
	</properties>

	<!-- NOTE: in case of dependency changes, please update the includeArtifactIds section in the maven-dependency-plugin configuration as well, listing all (exact and transitive) dependency artifactIds -->
	<dependencies>	
		<dependency>
		   <groupId>commons-fileupload</groupId>
		   <artifactId>commons-fileupload</artifactId>
		   <version>1.4</version>
		   <scope>provided</scope>
		</dependency>
		<dependency>
		   <groupId>commons-logging</groupId>
		   <artifactId>commons-logging</artifactId>
		   <version>1.2</version>
		   <scope>provided</scope>
		</dependency>
		<dependency>
	      	<groupId>org.springdoc</groupId>
	      	<artifactId>springdoc-openapi-webmvc-core</artifactId>
	      	<version>${springdoc.version}</version>
	      	<scope>provided</scope>
	   	</dependency>
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-webmvc</artifactId>
		    <version>${spring.version}</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot</artifactId>
    		<version>2.5.2</version>
    		<scope>provided</scope>
		</dependency>
		<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-autoconfigure</artifactId>
    		<version>2.5.2</version>
    		<scope>provided</scope>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
            			<id>clean-folders</id>
            			<phase>generate-sources</phase>
            			<goals>
              				<goal>clean</goal>
            			</goals>
            			<configuration>
            				<filesets>
								<fileset>
									<directory>WEB-INF/lib</directory>
									<excludes>
										<exclude>.gitignore</exclude>
									</excludes>
								</fileset>
								<fileset>
									<directory>site</directory>
									<excludes>
										<exclude>.gitignore</exclude>
									</excludes>
								</fileset>
								<fileset>
									<directory>snow-owl-api-docs/build</directory>
								</fileset>
							</filesets>
            			</configuration>
          			</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy-runtime-dependencies</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- Copying only the necessary JARs from the dependencies and their transitive stuff -->
							<includeArtifactIds>
								spring-aop,
								spring-beans,
								spring-context,
								spring-core,
								spring-expression,
								spring-plugin-core,
								spring-plugin-metadata,
								spring-security-config,
								spring-security-core,
								spring-security-web,
								spring-security-crypto,
								spring-web,
								spring-webmvc,
								commons-logging,
								commons-fileupload,
								springdoc-openapi-common,
								springdoc-openapi-webmvc-core,
								swagger-core,
								spring-boot,
								spring-boot-autoconfigure
							</includeArtifactIds>
							<outputDirectory>WEB-INF/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
        		<groupId>com.github.eirslett</groupId>
        		<artifactId>frontend-maven-plugin</artifactId>
        		<version>1.8.0</version>
        		<executions>
        			<execution>
	            		<id>install node and npm</id>
	            		<goals>
	                		<goal>install-node-and-npm</goal>
	            		</goals>
	            		<phase>generate-resources</phase>
        			</execution>
        			<execution>
    					<id>npm install</id>
    					<goals>
        					<goal>npm</goal>
    					</goals>
    					<phase>generate-resources</phase>
    					<configuration>
        					<arguments>install</arguments>
    					</configuration>
					</execution>
					<execution>
    					<id>npm build</id>
    					<goals>
        					<goal>npm</goal>
    					</goals>
    					<phase>generate-resources</phase>
    					<configuration>
    						<workingDirectory>${basedir}/snow-owl-api-docs</workingDirectory>
        					<arguments>run build</arguments>
    					</configuration>
					</execution>
    			</executions>
    			<configuration>
    				<installDirectory>${project.build.directory}/node</installDirectory>
    				<workingDirectory>${basedir}/snow-owl-api-docs</workingDirectory>
        			<nodeVersion>${node.version}</nodeVersion>
        			<npmVersion>${npm.version}</npmVersion>
    			</configuration>
		    </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
            			<id>copy-static-resources</id>
            			<phase>generate-resources</phase>
            			<goals>
              				<goal>copy-resources</goal>
            			</goals>
            			<configuration>
            				<outputDirectory>${basedir}/site</outputDirectory>
            				<overwrite>true</overwrite>
            				<resources>
            					<resource>
            						<directory>${basedir}/snow-owl-api-docs/build</directory>
            					</resource>
            				</resources>
            			</configuration>
          			</execution>
				</executions>
			</plugin>
		</plugins>
		
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[3.0.2,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-clean-plugin</artifactId>
										<versionRange>[3.1.0,)</versionRange>
										<goals>
											<goal>clean</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.github.eirslett</groupId>
        								<artifactId>frontend-maven-plugin</artifactId>
        								<versionRange>[1.8.0,)</versionRange>
        								<goals>
											<goal>install-node-and-npm</goal>
											<goal>npm</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-resources-plugin</artifactId>
										<versionRange>[3.1.0,)</versionRange>
										<goals>
											<goal>copy-resources</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>false</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<profiles>
		<profile>
      		<id>skipFrontend</id>
      		<activation>
      			<property>
      				<name>env.LGTM_SRC</name>
      			</property>
      		</activation>
      		<properties>
      			<skip.installnodenpm>true</skip.installnodenpm>
      			<skip.grunt>true</skip.grunt>
      			<skip.npm>true</skip.npm>
      		</properties>
    	</profile>
	</profiles>
	
</project>

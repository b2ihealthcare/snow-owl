<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.b2international.snowowl</groupId>
		<artifactId>core-parent</artifactId>
		<version>9.3.1-SNAPSHOT</version>
	</parent>

	<artifactId>com.b2international.snowowl.core.rest</artifactId>
	<packaging>eclipse-plugin</packaging>

	<properties>
		<spring.version>6.1.13</spring.version>
		<spring.security.version>6.3.3</spring.security.version>
		<springdoc.version>2.6.0</springdoc.version>
		<!-- Make sure this version matches the one present in the target-platform for swagger-annotations and models -->
		<swagger.core.version>2.2.22</swagger.core.version>
		<!-- Node.js version to use for building the API docs site -->
		<node.version>v20.16.0</node.version>
		<npm.version>10.8.2</npm.version>
	</properties>

	<!-- NOTE: in case of dependency changes, please update the includeArtifactIds section in the maven-dependency-plugin configuration as well, listing all (exact and transitive) dependency artifactIds -->
	<dependencies>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
			<version>${springdoc.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-core-jakarta</artifactId>
			<version>${swagger.core.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot</artifactId>
			<version>3.3.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
			<version>3.3.2</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<?m2e ignore?>
						<id>clean-folders</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<filesets>
								<fileset>
									<directory>WEB-INF/lib</directory>
									<excludes>
										<exclude>.gitignore</exclude>
									</excludes>
								</fileset>
								<fileset>
									<directory>site</directory>
									<excludes>
										<exclude>.gitignore</exclude>
									</excludes>
								</fileset>
								<fileset>
									<directory>snow-owl-api-docs/dist</directory>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<?m2e execute onConfiguration?>
						<id>copy-runtime-dependencies</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- Copying only the necessary JARs from the
							dependencies and their transitive stuff -->
							<includeArtifactIds>
								spring-aop,
								spring-beans,
								spring-context,
								spring-core,
								spring-expression,
								spring-jcl,
								spring-security-config,
								spring-security-core,
								spring-security-web,
								spring-security-crypto,
								spring-web,
								spring-webmvc,
								springdoc-openapi-starter-common,
								springdoc-openapi-starter-webmvc-api,
								spring-boot,
								spring-boot-autoconfigure,
								swagger-core-jakarta
							</includeArtifactIds>
							<outputDirectory>WEB-INF/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.15.0</version>
				<executions>
					<execution>
						<?m2e execute onConfiguration?>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<phase>generate-resources</phase>
					</execution>
					<execution>
						<?m2e execute onConfiguration?>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<?m2e execute onConfiguration?>
						<id>npm build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<workingDirectory>${basedir}/snow-owl-api-docs</workingDirectory>
							<arguments>run build</arguments>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<installDirectory>${project.build.directory}/node</installDirectory>
					<workingDirectory>${basedir}/snow-owl-api-docs</workingDirectory>
					<nodeVersion>${node.version}</nodeVersion>
					<npmVersion>${npm.version}</npmVersion>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<?m2e execute onConfiguration?>
						<id>copy-static-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/site</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<directory>
										${basedir}/snow-owl-api-docs/dist</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>skipFrontend</id>
			<activation>
				<property>
					<name>env.LGTM_SRC</name>
				</property>
			</activation>
			<properties>
				<skip.installnodenpm>true</skip.installnodenpm>
				<skip.grunt>true</skip.grunt>
				<skip.npm>true</skip.npm>
			</properties>
		</profile>
	</profiles>

</project>
